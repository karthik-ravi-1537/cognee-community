name: community-setup
description: "Sets up Python, installs Poetry, and installs dependencies for Cognee Community packages."

inputs:
  python-version:
    description: "Which Python version to use"
    required: false
    default: "3.11.x"
  package-path:
    description: "Path to the package directory (e.g., packages/vector/qdrant)"
    required: true
  run-mypy:
    description: "Whether to run mypy type checking"
    required: false
    default: "false"
  mypy-target:
    description: "Target file/directory for mypy (relative to package-path)"
    required: false
    default: "."

runs:
  using: "composite"
  steps:
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}

    - name: Install Poetry
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install poetry

    - name: Install package dependencies
      shell: bash
      run: |
        cd ${{ inputs.package-path }}
        if [ "${{ inputs.run-mypy }}" = "true" ]; then
          echo "Installing with dev dependencies (mypy requested)..."
          poetry install --no-interaction --extras dev
        else
          echo "Installing main dependencies only..."
          poetry install --no-interaction
        fi
      working-directory: ./

    - name: Verify installation
      shell: bash
      run: |
        cd ${{ inputs.package-path }}
        poetry run python -c "import cognee; print('Cognee imported successfully')"
      working-directory: ./

    - name: Run mypy type checking
      if: ${{ inputs.run-mypy == 'true' }}
      shell: bash
      run: |
        cd ${{ inputs.package-path }}
        echo "Running mypy type checking on ${{ inputs.mypy-target }}..."
        poetry run python -m mypy ${{ inputs.mypy-target }}
        echo "âœ… MyPy type checking passed!"
      working-directory: ./ 